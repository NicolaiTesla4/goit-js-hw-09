{"mappings":"iMAWA,SAASA,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,WACLH,EACFF,EAAQ,CAAEH,WAAUC,UAEpBG,EAAO,CAAEJ,WAAUC,S,GAEpBA,E,mTApBPQ,EAAA,SAwBAC,SACGC,eAAe,sBACfC,iBAAiB,UAAU,SAAUC,GACpCA,EAAMC,iBAEN,IAAMC,EAAaC,SAASC,KAAKC,SAAgB,MAAEC,MAAO,IACpDC,EAAYJ,SAASC,KAAKC,SAAe,KAAEC,MAAO,IAClDE,EAASL,SAASC,KAAKC,SAAiB,OAAEC,MAAO,IAEvDG,SAASC,OAAOC,KAAK,CAAExB,SAAU,iBAEjC,IAAK,IAAIyB,EAAI,EAAGA,GAAKJ,EAAQI,IAAK,CAEhC1B,EAAc0B,EADOV,GAAcU,EAAI,GAAKL,GAEzCM,MAAK,SAAAC,G,IAAG3B,EAAQ2B,EAAR3B,SAAUC,EAAK0B,EAAL1B,MACjBqB,SAASC,OAAOK,QACd,uBAAwCC,OAAf7B,EAAS,QAAY6B,OAAN5B,EAAM,M,IAGjD6B,OAAM,SAAAH,G,IAAG3B,EAAQ2B,EAAR3B,SAAUC,EAAK0B,EAAL1B,MAClBqB,SAASC,OAAOQ,QACd,sBAAqCF,OAAf7B,EAAS,QAAY6B,OAAN5B,EAAM,M","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from \"notiflix\";\n\n/* function createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  if (shouldResolve) {\n    // Fulfill\n  } else {\n    // Reject\n  }\n} */\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\ndocument\n  .getElementById(\"createPromisesForm\")\n  .addEventListener(\"submit\", function (event) {\n    event.preventDefault();\n\n    const firstDelay = parseInt(this.elements[\"delay\"].value, 10);\n    const delayStep = parseInt(this.elements[\"step\"].value, 10);\n    const amount = parseInt(this.elements[\"amount\"].value, 10);\n\n    notiflix.Notify.Init({ position: \"right-bottom\" });\n\n    for (let i = 1; i <= amount; i++) {\n      const currentDelay = firstDelay + (i - 1) * delayStep;\n      createPromise(i, currentDelay)\n        .then(({ position, delay }) => {\n          notiflix.Notify.Success(\n            `✅ Fulfilled promise ${position} in ${delay}ms`\n          );\n        })\n        .catch(({ position, delay }) => {\n          notiflix.Notify.Failure(\n            `❌ Rejected promise ${position} in ${delay}ms`\n          );\n        });\n    }\n  });\n"],"names":["$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","parcelRequire","document","getElementById","addEventListener","event","preventDefault","firstDelay","parseInt","this","elements","value","delayStep","amount","notiflix","Notify","Init","i","then","param","Success","concat","catch","Failure"],"version":3,"file":"03-promises.97180f6a.js.map"}